{"version":3,"sources":["img/Lexus.svg","containers/NavbarHome.js","containers/HomeNotLoggedIn.js","actions/index.js","components/Cars.js","components/Car.js","components/AppointmentForm.js","components/Appointments.js","containers/HomeLoggedIn.js","containers/Home.js","components/LoginForm.js","containers/Login.js","components/SignupForm.js","containers/Signup.js","components/App.js","reducers/user.js","reducers/car.js","reducers/appointment.js","reducers/index.js","index.js"],"names":["module","exports","NavbarHome","text1","text2","path1","path2","className","onClick","navbar","document","getElementsByClassName","line1","line2","classList","toggle","role","href","HomeNotLoggedIn","LOAD_APPOINTMENTS","id","dispatch","Axios","get","withCredentials","then","response","type","payload","data","appointments","Cars","props","state","cars","this","getCars","prevProps","setState","handleClick","map","car","key","src","image","alt","name","description","Component","connect","catch","error","GET_CARS","Car","getCar","e","addDataAppointment","user","signing","month_fee","lease_cash","price","months","makeAppointment","bind","ADD_DATA_APPOINTMENT","AppointmentForm","user_id","car_id","date","city","car_name","cities","appointmentData","today","Date","day","getDate","month","getMonth","year","getFullYear","target","value","preventDefault","bookAppointment","loadAppointments","onSubmit","handleSubmit","htmlFor","disabled","user_name","onChange","handleChange","appointment","bookData","post","BOOK_APPOINTMENT","Appointments","userID","toLocaleDateString","HomeLoggedIn","selection","content","clickHandler","updateSelection","removeClassTo","addClassTo","menuList","i","children","length","remove","item","add","parentElement","getElementById","parseInt","innerHTML","logout","lexusLogo","select","Home","status","LoginForm","email","password","errorMessage","resetError","setTimeout","login","placeholder","userData","logged_in","LOGIN","Login","history","push","SignupForm","firstName","lastName","passwordConfirmation","createAccount","first_name","last_name","password_confirmation","CREATE_ACCOUNT","Signup","App","handleLogot","checkStatus","Switch","Route","exact","path","render","delete","initialState","action","last_appointment","reducer","combineReducers","createStore","applyMiddleware","thunk","logger","ReactDOM","store"],"mappings":"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","file":"static/js/main.cb60941b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Lexus.e0893d04.svg\";","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './NavbarHome.scss';\n\nconst NavbarHome = ({\n  text1, text2, path1, path2,\n}) => {\n  const showMenu = () => {\n    const navbar = document.getElementsByClassName('navbar');\n    const line1 = document.getElementsByClassName('line-1');\n    const line2 = document.getElementsByClassName('line-2');\n    line1[0].classList.toggle('change-1');\n    line2[0].classList.toggle('change-2');\n    navbar[0].classList.toggle('move-left');\n  };\n\n  return (\n    <nav className=\"navbar\">\n      <div className=\"menu-icon\" onClick={showMenu} role=\"presentation\">\n        <div className=\"line line-1\" />\n        <div className=\"line line-2\" />\n      </div>\n      <ul className=\"nav-list\">\n        <li className=\"nav-item\"><a href={path1} className=\"nav-link\">{text1}</a></li>\n        <li className=\"nav-item\"><a href={path2} className=\"nav-link\">{text2}</a></li>\n      </ul>\n    </nav>\n  );\n};\n\nNavbarHome.propTypes = {\n  text1: PropTypes.string.isRequired,\n  text2: PropTypes.string.isRequired,\n  path1: PropTypes.string.isRequired,\n  path2: PropTypes.string.isRequired,\n};\n\nexport default NavbarHome;\n","import React from 'react';\nimport NavbarHome from './NavbarHome';\nimport './HomeNotLoggedIn.scss';\n\nconst HomeNotLoggedIn = () => (\n  <div className=\"container\">\n    <NavbarHome text1=\"Log In\" path1=\"/login\" text2=\"Sign Up\" path2=\"/signup\" />\n    <div className=\"main-content\">\n      <div className=\"main-text\">EXPERIENCE THE LEXUS</div>\n      <div className=\"main-button-container\"><a href=\"/signup\" className=\"main-button\">Create an Account</a></div>\n    </div>\n  </div>\n);\n\nexport default HomeNotLoggedIn;\n","import Axios from 'axios';\n\nexport const CHECK_STATUS = () => dispatch => {\n  Axios.get('http://sleepy-forest-50807.herokuapp.com/logged_in', { withCredentials: true })\n    .then(response => {\n      if (response.data.logged_in) {\n        dispatch({ type: 'LOGGED_IN', payload: response });\n      } else if (!response.data.logged_in) {\n        dispatch({ type: 'LOGGED_OUT', response });\n      }\n    })\n    .catch(error => {\n      dispatch({ type: 'USER_ERROR', error });\n    });\n};\n\nexport const LOGIN = userData => dispatch => {\n  const user = {\n    email: userData.email,\n    password: userData.password,\n  };\n  Axios.post('http://sleepy-forest-50807.herokuapp.com/sessions', { user }, { withCredentials: true })\n    .then(response => {\n      if (response.data.logged_in) {\n        dispatch({ type: 'LOGGED_IN', payload: response });\n      } else {\n        dispatch({ type: 'LOGIN_ERROR' });\n      }\n    })\n    .catch(error => {\n      dispatch({ type: 'USER_ERROR', error });\n    });\n};\n\nexport const LOGOUT = () => dispatch => {\n  Axios.delete('http://sleepy-forest-50807.herokuapp.com/logout', { withCredentials: true })\n    .then(response => {\n      dispatch({ type: 'LOGGED_OUT', response });\n    })\n    .catch(error => {\n      dispatch({ type: 'USER_ERROR', error });\n    });\n};\n\nexport const CREATE_ACCOUNT = userData => dispatch => {\n  const user = {\n    first_name: userData.firstName,\n    last_name: userData.lastName,\n    email: userData.email,\n    password: userData.password,\n    password_confirmation: userData.passwordConfirmation,\n  };\n  Axios.post('http://sleepy-forest-50807.herokuapp.com/registrations', { user }, { withCredentials: true })\n    .then(response => {\n      if (response.data.status === 'created') {\n        dispatch({ type: 'LOGGED_IN', payload: response });\n      }\n    })\n    .catch(error => {\n      dispatch({ type: 'CREATE_ACCOUNT_ERROR', error });\n    });\n};\n\nexport const RESET_ERROR = () => ({\n  type: 'RESET_ERROR',\n});\n\nexport const GET_CARS = type => dispatch => {\n  Axios.get(`http://sleepy-forest-50807.herokuapp.com/cars/${type}`)\n    .then(response => {\n      dispatch({ type: 'GET_CARS', payload: response.data.cars });\n    })\n    .catch(error => {\n      dispatch({ type: 'GET_CAR_ERROR', error });\n    });\n};\n\nexport const GET_CAR = id => dispatch => {\n  Axios.get(`http://sleepy-forest-50807.herokuapp.com/car/${id}`)\n    .then(response => {\n      dispatch({ type: 'GET_CAR', payload: response.data.car });\n    })\n    .catch(error => {\n      dispatch({ type: 'GET_CAR_ERROR', error });\n    });\n};\n\nexport const ADD_DATA_APPOINTMENT = (user, car) => ({\n  type: 'ADD_DATA',\n  payload: { user, car },\n});\n\nexport const BOOK_APPOINTMENT = bookData => dispatch => {\n  Axios.post('http://sleepy-forest-50807.herokuapp.com/appointments', bookData, { withCredentials: true })\n    .then(response => {\n      dispatch({ type: 'BOOK_APPOINTMENT', response });\n    });\n};\n\nexport const LOAD_APPOINTMENTS = id => dispatch => {\n  Axios.get(`http://sleepy-forest-50807.herokuapp.com/appointments/${id}`, { withCredentials: true })\n    .then(response => {\n      dispatch({ type: 'LOAD_APPOINTMENTS', payload: response.data.appointments });\n    });\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { GET_CARS } from '../actions';\n\nclass Cars extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      cars: [],\n    };\n  }\n\n  componentDidMount() {\n    const { getCars, type } = this.props;\n    getCars(type);\n  }\n\n  componentDidUpdate(prevProps) {\n    const { cars, type, getCars } = this.props;\n    if (prevProps.cars !== cars) {\n      // eslint-disable-next-line react/no-did-update-set-state\n      this.setState({\n        cars,\n      });\n    }\n    if (prevProps.type !== type) {\n      getCars(type);\n    }\n  }\n\n  render() {\n    const { type, handleClick } = this.props;\n    const { cars } = this.state;\n    return (\n      <div className=\"content\">\n        <div className=\"selection-head\">\n          <div className=\"title\">{type}</div>\n          <div className=\"subtitle\">Please select a Lexus Model</div>\n          <div className=\"dots\" />\n        </div>\n        <div className=\"selection-content\">\n          {\n            cars.map(car => (\n              <div className=\"car\" key={car.id} id={car.id}>\n                <img src={car.image} alt={car.name} onClick={handleClick} role=\"presentation\" />\n                <div className=\"car-name\">{car.name}</div>\n                <div className=\"dots\" />\n                <div className=\"car-description\">{car.description}</div>\n                <div className=\"social-media-area\">\n                  <i className=\"fab fa-facebook-f\" />\n                  <i className=\"fab fa-twitter\" />\n                  <i className=\"fab fa-instagram\" />\n                </div>\n              </div>\n            ))\n          }\n        </div>\n      </div>\n    );\n  }\n}\n\nCars.propTypes = {\n  type: PropTypes.string.isRequired,\n  getCars: PropTypes.func.isRequired,\n  handleClick: PropTypes.func.isRequired,\n  cars: PropTypes.oneOfType([PropTypes.any]).isRequired,\n};\n\nconst mapStateToProps = state => ({\n  cars: state.car.cars,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  getCars: type => dispatch(GET_CARS(type)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Cars);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { GET_CAR, ADD_DATA_APPOINTMENT } from '../actions';\n\nclass Car extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      car: {},\n    };\n  }\n\n  componentDidMount() {\n    const { getCar, id } = this.props;\n    getCar(id);\n  }\n\n  componentDidUpdate(prevProps) {\n    const { car } = this.props;\n    if (prevProps.car !== car) {\n      // eslint-disable-next-line react/no-did-update-set-state\n      this.setState({\n        car: car[0],\n      });\n    }\n  }\n\n  makeAppointment(e) {\n    const {\n      handleClick, addDataAppointment, user, car,\n    } = this.props;\n    handleClick(e);\n    addDataAppointment(user, car[0]);\n  }\n\n  render() {\n    const { car } = this.state;\n    return (\n      <div className=\"individual-car\">\n        <div className=\"car-image\">\n          <img src={car.image} alt={car.name} />\n        </div>\n        <div className=\"car-info-area\">\n          <div className=\"car-name\">{car.name}</div>\n          <div className=\"price-area\">\n            <div className=\"row back-color\">\n              <div className=\"text\">Due at Signing</div>\n              <div className=\"price-tex\">{car.signing}</div>\n            </div>\n            <div className=\"row\">\n              <div className=\"text\">Monthly Fee</div>\n              <div className=\"price-text\">{car.month_fee}</div>\n            </div>\n            <div className=\"row back-color\">\n              <div className=\"text\">Lease Cash</div>\n              <div className=\"price-text\">{car.lease_cash}</div>\n            </div>\n            <div className=\"row\">\n              <div className=\"text\">Total payable</div>\n              <div className=\"price-text\">{car.price}</div>\n            </div>\n            <div className=\"row back-color\">\n              <div className=\"text\">Duration</div>\n              <div className=\"price-text\">{car.months}</div>\n            </div>\n          </div>\n          <button type=\"button\" onClick={this.makeAppointment.bind(this)} id=\"CREATE-APPONITMETNT\">Book an Appointment</button>\n        </div>\n      </div>\n    );\n  }\n}\n\nCar.propTypes = {\n  id: PropTypes.string.isRequired,\n  getCar: PropTypes.func.isRequired,\n  handleClick: PropTypes.func.isRequired,\n  addDataAppointment: PropTypes.func.isRequired,\n  car: PropTypes.oneOfType([PropTypes.any]).isRequired,\n  user: PropTypes.oneOfType([PropTypes.any]).isRequired,\n};\n\nconst mapStateToProps = state => ({\n  car: state.car.car,\n  user: state.user.user,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  getCar: type => dispatch(GET_CAR(type)),\n  addDataAppointment: (user, car) => dispatch(ADD_DATA_APPOINTMENT(user, car)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Car);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { BOOK_APPOINTMENT, LOAD_APPOINTMENTS } from '../actions';\n\nclass AppointmentForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      user_id: null,\n      car_id: null,\n      date: '',\n      city: 'Chorrera',\n      car_name: '',\n    };\n    this.cities = ['Chorrera', 'Colon', 'David', 'Panama', 'Santiago'];\n  }\n\n  componentDidMount() {\n    const { appointmentData } = this.props;\n    const today = new Date();\n    let day = today.getDate();\n    let month = today.getMonth() + 1;\n    const year = today.getFullYear();\n    if (month < 10) {\n      month = `0${month}`;\n    }\n    if (day < 10) {\n      day = `0${day}`;\n    }\n    this.setState({\n      user_id: appointmentData.user_id,\n      car_id: appointmentData.car_id,\n      date: `${year}-${month}-${day}`,\n      car_name: appointmentData.car_name,\n    });\n  }\n\n  handleChange(e) {\n    this.setState({\n      [e.target.name]: e.target.value,\n    });\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    const { bookAppointment, handleClick, loadAppointments } = this.props;\n    bookAppointment(this.state);\n    handleClick();\n    loadAppointments();\n  }\n\n  render() {\n    const { appointmentData } = this.props;\n    const { date, city } = this.state;\n    return (\n      <div className=\"appointment-form\">\n        <div className=\"book-test\">BOOK A LEXUS TEST-DRIVE</div>\n        <form onSubmit={this.handleSubmit.bind(this)}>\n          <label htmlFor=\"name\">\n            <span>User Name:</span>\n            <br />\n            <input type=\"text\" disabled value={appointmentData.user_name} id=\"name\" />\n          </label>\n          <br />\n          <label htmlFor=\"car-name\">\n            <span>Selected Car:</span>\n            <br />\n            <input type=\"text\" disabled value={appointmentData.car_name} id=\"car-name\" />\n          </label>\n          <br />\n          <label htmlFor=\"date\">\n            <span>Select a Date:</span>\n            <br />\n            <input type=\"date\" id=\"date\" onChange={this.handleChange.bind(this)} name=\"date\" value={date} />\n          </label>\n          <br />\n          <label htmlFor=\"city\">\n            <span>Select a City:</span>\n            <br />\n            <select id=\"cities\" onChange={this.handleChange.bind(this)} name=\"city\" value={city}>\n              {this.cities.map(city => (\n                <option value={city} key={city}>{city}</option>\n              ))}\n            </select>\n          </label>\n          <br />\n          <button type=\"submit\">Book Now</button>\n        </form>\n      </div>\n    );\n  }\n}\n\nAppointmentForm.propTypes = {\n  appointmentData: PropTypes.oneOfType([PropTypes.any]).isRequired,\n  bookAppointment: PropTypes.func.isRequired,\n  handleClick: PropTypes.func.isRequired,\n  loadAppointments: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = state => ({\n  appointmentData: state.appointment,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  bookAppointment: bookData => dispatch(BOOK_APPOINTMENT(bookData)),\n  loadAppointments: id => dispatch(LOAD_APPOINTMENTS(id)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AppointmentForm);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { LOAD_APPOINTMENTS } from '../actions';\n\nclass Appointments extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      appointments: [],\n    };\n  }\n\n  componentDidMount() {\n    const { loadAppointments, userID } = this.props;\n    loadAppointments(userID);\n  }\n\n  componentDidUpdate(prevProps) {\n    const { appointments } = this.props;\n    if (prevProps.appointments !== appointments) {\n      // eslint-disable-next-line react/no-did-update-set-state\n      this.setState({\n        appointments,\n      });\n    }\n  }\n\n  render() {\n    const { appointments } = this.state;\n    return (\n      <div className=\"appointment-page\">\n        <div className=\"title\">APPOINTMENTS</div>\n        <div className=\"dots\" />\n        <div className=\"all-appointments\">\n          <div className=\"row-head\">\n            <div>Car Model</div>\n            <div>Date</div>\n            <div>City</div>\n          </div>\n          {\n            appointments.map(appointment => (\n              <div key={appointment.id} className=\"row\">\n                <div className=\"data\">{appointment.car_name}</div>\n                <div className=\"data\">{new Date(appointment.date).toLocaleDateString()}</div>\n                <div className=\"data\">{appointment.city}</div>\n              </div>\n            ))\n          }\n          <div className=\"message\">\n            To book an appointment, select a car and click on\n            {' '}\n            <i>Book an Appointment</i>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nAppointments.propTypes = {\n  appointments: PropTypes.oneOfType([PropTypes.any]).isRequired,\n  userID: PropTypes.number.isRequired,\n  loadAppointments: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = state => ({\n  appointments: state.appointment.appointments,\n  userID: state.user.user.id,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  loadAppointments: id => dispatch(LOAD_APPOINTMENTS(id)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Appointments);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport lexusLogo from '../img/Lexus.svg';\nimport './HomeLoggedIn.scss';\nimport Cars from '../components/Cars';\nimport Car from '../components/Car';\nimport AppointmentForm from '../components/AppointmentForm';\nimport Appointments from '../components/Appointments';\n\nclass HomeLoggedIn extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selection: 'SEDAN',\n    };\n    this.content = this.content.bind(this);\n    this.clickHandler = this.clickHandler.bind(this);\n    this.makeAppointment = this.makeAppointment.bind(this);\n    this.updateSelection = this.updateSelection.bind(this);\n    this.removeClassTo = this.removeClassTo.bind(this);\n    this.addClassTo = this.addClassTo.bind(this);\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  removeClassTo() {\n    const menuList = document.getElementsByClassName('menu-list')[0];\n    for (let i = 0; i < menuList.children.length; i += 1) {\n      menuList.children[i].classList.remove('selection');\n    }\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  addClassTo(item) {\n    item.classList.add('selection');\n  }\n\n  clickHandler(e) {\n    this.setState({\n      selection: e.target.parentElement.id,\n    });\n  }\n\n  makeAppointment(e) {\n    this.setState({\n      selection: e.target.id,\n    });\n    this.removeClassTo();\n  }\n\n  updateSelection() {\n    this.setState({\n      selection: 'APPOINTMENTS',\n    });\n    this.removeClassTo();\n    this.addClassTo(document.getElementById('appointments'));\n  }\n\n  content() {\n    const { selection } = this.state;\n    if (parseInt(selection, 10)) {\n      return (\n        <Car id={selection} handleClick={this.makeAppointment} />\n      );\n    }\n    if (selection === 'CREATE-APPONITMETNT') {\n      return (\n        <AppointmentForm handleClick={this.updateSelection} />\n      );\n    }\n    if (selection === 'APPOINTMENTS') {\n      return (\n        <Appointments />\n      );\n    }\n    return (\n      <Cars type={selection} handleClick={this.clickHandler} />\n    );\n  }\n\n  select(e) {\n    this.removeClassTo();\n    const item = e.target;\n    this.addClassTo(item);\n    if (item.innerHTML === 'SEDAN') {\n      this.setState({\n        selection: 'SEDAN',\n      });\n    } else if (item.innerHTML === 'SUV') {\n      this.setState({\n        selection: 'SUV',\n      });\n    } else if (item.innerHTML === 'COUPE') {\n      this.setState({\n        selection: 'COUPE',\n      });\n    } else if (item.innerHTML === 'HYBRID') {\n      this.setState({\n        selection: 'HYBRID',\n      });\n    } else if (item.innerHTML === 'TEST DRIVE') {\n      this.setState({\n        selection: 'TEST DRIVE',\n      });\n    } else if (item.innerHTML === 'APPOINTMENTS') {\n      this.setState({\n        selection: 'APPOINTMENTS',\n      });\n    }\n  }\n\n  render() {\n    const { logout } = this.props;\n    return (\n      <div className=\"container-4\">\n        <div className=\"side-menu\">\n          <div className=\"logo\">\n            <img src={lexusLogo} alt=\"Lexus\" />\n          </div>\n          <div className=\"menu\">\n            <nav>\n              <ul className=\"menu-list\">\n                <li onClick={this.select.bind(this)} role=\"presentation\" className=\"selection\">SEDAN</li>\n                <li onClick={this.select.bind(this)} role=\"presentation\">SUV</li>\n                <li onClick={this.select.bind(this)} role=\"presentation\">COUPE</li>\n                <li onClick={this.select.bind(this)} role=\"presentation\">HYBRID</li>\n                <li onClick={this.select.bind(this)} role=\"presentation\" id=\"appointments\">APPOINTMENTS</li>\n              </ul>\n            </nav>\n          </div>\n          <div className=\"social-media\">\n            <div className=\"icons\">\n              <i className=\"fab fa-twitter\" />\n              <i className=\"fab fa-facebook-f\" />\n              <i className=\"fab fa-google-plus-g\" />\n              <i className=\"fab fa-pinterest-p\" />\n            </div>\n            <button type=\"button\" onClick={() => logout()}>Log Out</button>\n          </div>\n        </div>\n        <div className=\"\">{this.content()}</div>\n      </div>\n    );\n  }\n}\n\nHomeLoggedIn.propTypes = {\n  logout: PropTypes.func.isRequired,\n};\n\nexport default HomeLoggedIn;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport HomeNotLoggedIn from './HomeNotLoggedIn';\nimport HomeLoggedIn from './HomeLoggedIn';\n\nconst Home = ({ status, logout }) => {\n  const renderHome = () => {\n    if (status === 'CONNECTED') {\n      return (\n        <HomeLoggedIn logout={logout} />\n      );\n    }\n    return (\n      <HomeNotLoggedIn />\n    );\n  };\n\n  return (\n    <>\n      { renderHome() }\n    </>\n  );\n};\n\nHome.propTypes = {\n  status: PropTypes.string.isRequired,\n  logout: PropTypes.func.isRequired,\n};\n\nexport default Home;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { LOGIN, RESET_ERROR } from '../actions/index';\n\nclass LoginForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: '',\n      password: '',\n    };\n  }\n\n  componentDidUpdate(prevProps) {\n    const { errorMessage, resetError } = this.props;\n    if (prevProps.errorMessage !== errorMessage) {\n      const message = document.getElementsByClassName('error-message');\n      message[0].innerHTML = errorMessage;\n      setTimeout(() => resetError(), 3000);\n    }\n  }\n\n  handleChange(e) {\n    this.setState({\n      [e.target.name]: e.target.value,\n    });\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    const { login } = this.props;\n    login(this.state);\n  }\n\n  render() {\n    const { email, password } = this.state;\n    return (\n      <div>\n        <form className=\"login-form\" onSubmit={this.handleSubmit.bind(this)}>\n          <input type=\"email\" placeholder=\"Email\" name=\"email\" value={email} onChange={this.handleChange.bind(this)} />\n          <br />\n          <input type=\"password\" placeholder=\"Password\" name=\"password\" value={password} onChange={this.handleChange.bind(this)} />\n          <br />\n          <button type=\"submit\">Log In</button>\n        </form>\n        <div className=\"error-message\" />\n      </div>\n    );\n  }\n}\n\nLoginForm.propTypes = {\n  login: PropTypes.func.isRequired,\n  errorMessage: PropTypes.string.isRequired,\n  resetError: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = state => ({\n  errorMessage: state.user.errorMessage,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  login: userData => dispatch(LOGIN(userData)),\n  resetError: () => dispatch(RESET_ERROR()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginForm);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport NavbarHome from './NavbarHome';\nimport LoginForm from '../components/LoginForm';\nimport './Login.scss';\n\nclass Login extends Component {\n  componentDidUpdate(prevProps) {\n    const { status, history } = this.props;\n    if (prevProps.status !== status) {\n      history.push('/');\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"container-2\">\n        <NavbarHome text1=\"Home\" path1=\"/\" text2=\"Sign Up\" path2=\"/signup\" />\n        <LoginForm />\n      </div>\n    );\n  }\n}\n\nLogin.propTypes = {\n  status: PropTypes.string.isRequired,\n  history: PropTypes.oneOfType([PropTypes.any]).isRequired,\n};\n\nexport default Login;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { CREATE_ACCOUNT, RESET_ERROR } from '../actions';\n\nclass SignupForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      firstName: '',\n      lastName: '',\n      email: '',\n      password: '',\n      passwordConfirmation: '',\n    };\n  }\n\n  componentDidUpdate(prevProps) {\n    const { errorMessage, resetError } = this.props;\n    if (prevProps.errorMessage !== errorMessage) {\n      const message = document.getElementsByClassName('error-message');\n      message[0].innerHTML = errorMessage;\n      setTimeout(() => resetError(), 3000);\n    }\n  }\n\n  handleChange(e) {\n    this.setState({\n      [e.target.name]: e.target.value,\n    });\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    const { createAccount } = this.props;\n    createAccount(this.state);\n  }\n\n  render() {\n    const {\n      firstName, lastName, email, password, passwordConfirmation,\n    } = this.state;\n    return (\n      <form className=\"login-form\" onSubmit={this.handleSubmit.bind(this)}>\n        <input type=\"text\" placeholder=\"First Name\" name=\"firstName\" value={firstName} onChange={this.handleChange.bind(this)} />\n        <br />\n        <input type=\"text\" placeholder=\"Last Name\" name=\"lastName\" value={lastName} onChange={this.handleChange.bind(this)} />\n        <br />\n        <input type=\"email\" placeholder=\"Email\" name=\"email\" value={email} onChange={this.handleChange.bind(this)} />\n        <br />\n        <input type=\"password\" placeholder=\"Password\" name=\"password\" value={password} onChange={this.handleChange.bind(this)} />\n        <br />\n        <input type=\"password\" placeholder=\"Password Confirmation\" name=\"passwordConfirmation\" value={passwordConfirmation} onChange={this.handleChange.bind(this)} />\n        <br />\n        <button type=\"submit\">Create Account</button>\n        <div className=\"error-message\" />\n      </form>\n    );\n  }\n}\n\nSignupForm.propTypes = {\n  createAccount: PropTypes.func.isRequired,\n  errorMessage: PropTypes.string.isRequired,\n  resetError: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = state => ({\n  errorMessage: state.user.errorMessage,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  createAccount: userData => dispatch(CREATE_ACCOUNT(userData)),\n  resetError: () => dispatch(RESET_ERROR()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignupForm);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport NavbarHome from './NavbarHome';\nimport SignupForm from '../components/SignupForm';\nimport './Signup.scss';\n\nclass Signup extends Component {\n  componentDidUpdate(prevProps) {\n    const { status, history } = this.props;\n    if (prevProps.status !== status) {\n      history.push('/');\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"container-3\">\n        <NavbarHome text1=\"Home\" path1=\"/\" text2=\"Log In\" path2=\"/login\" />\n        <SignupForm />\n      </div>\n    );\n  }\n}\n\nSignup.propTypes = {\n  status: PropTypes.string.isRequired,\n  history: PropTypes.oneOfType([PropTypes.any]).isRequired,\n};\n\nexport default Signup;\n","/* eslint-disable react/jsx-props-no-spreading */\nimport React, { Component } from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Home from '../containers/Home';\nimport Login from '../containers/Login';\nimport Signup from '../containers/Signup';\nimport { CHECK_STATUS, LOGOUT } from '../actions';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.handleLogot = this.handleLogot.bind(this);\n  }\n\n  componentDidMount() {\n    const { checkStatus } = this.props;\n    checkStatus();\n  }\n\n  handleLogot() {\n    const { logout } = this.props;\n    logout();\n  }\n\n  render() {\n    const { status } = this.props;\n    return (\n      <Router>\n        <Switch>\n          <Route exact path=\"/\" render={() => <Home status={status} logout={this.handleLogot} />} />\n          <Route path=\"/login\" render={props => <Login {...props} status={status} />} />\n          <Route path=\"/signup\" render={props => <Signup {...props} status={status} />} />\n        </Switch>\n      </Router>\n    );\n  }\n}\n\nApp.propTypes = {\n  status: PropTypes.string.isRequired,\n  checkStatus: PropTypes.func.isRequired,\n  logout: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = state => ({\n  status: state.user.status,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  checkStatus: () => dispatch(CHECK_STATUS()),\n  logout: () => dispatch(LOGOUT()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","const initialState = {\n  status: 'NOT_CONNECTED',\n  user: {},\n  error: 'NO_ERROR',\n  errorMessage: '',\n};\n\nconst user = (state = initialState, action) => {\n  switch (action.type) {\n    case 'LOGGED_IN': return { ...state, status: 'CONNECTED', user: action.payload.data.user };\n    case 'LOGGED_OUT': return { ...state, status: 'NOT_CONNECTED', user: {} };\n    case 'LOGIN_ERROR': return { ...state, errorMessage: 'Email or password incorrect' };\n    case 'CREATE_ACCOUNT_ERROR': return { ...state, errorMessage: 'It was an error. Please check your information' };\n    case 'RESET_ERROR': return { ...state, errorMessage: '' };\n    case 'USER_ERROR': return { ...state, error: 'Something Went Wrong', user: {} };\n    default: return state;\n  }\n};\n\nexport default user;\n","const initialState = {\n  cars: [],\n  car: {},\n};\n\nconst car = (state = initialState, action) => {\n  switch (action.type) {\n    case 'GET_CARS': return { ...state, cars: action.payload };\n    case 'GET_CAR': return { ...state, car: action.payload };\n    default: return state;\n  }\n};\n\nexport default car;\n","const initialState = {\n  user_name: '',\n  user_id: null,\n  car_name: '',\n  car_id: null,\n  last_appointment: {},\n  appointments: [],\n};\n\nconst appointment = (state = initialState, action) => {\n  switch (action.type) {\n    case 'ADD_DATA': return {\n      ...state,\n      user_name: `${action.payload.user.first_name} ${action.payload.user.last_name}`,\n      user_id: action.payload.user.id,\n      car_name: action.payload.car.name,\n      car_id: action.payload.car.id,\n    };\n    case 'BOOK_APPOINTMENT': return {\n      ...state,\n      last_appointment: action.appointment,\n    };\n    case 'LOAD_APPOINTMENTS': return {\n      ...state,\n      appointments: action.payload,\n    };\n    default: return state;\n  }\n};\n\nexport default appointment;\n","import { combineReducers, applyMiddleware, createStore } from 'redux';\nimport thunk from 'redux-thunk';\nimport logger from 'redux-logger';\nimport user from './user';\nimport car from './car';\nimport appointment from './appointment';\n\nconst reducer = combineReducers({\n  user,\n  car,\n  appointment,\n});\n\nexport default createStore(reducer, applyMiddleware(thunk, logger));\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './components/App';\nimport store from './reducers/index';\nimport './index.scss';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}